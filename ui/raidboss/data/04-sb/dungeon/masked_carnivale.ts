import Outputs from '../../../../../resources/outputs';
import { Responses } from '../../../../../resources/responses';
import ZoneId from '../../../../../resources/zone_id';
import { RaidbossData } from '../../../../../types/data';
import { TriggerSet } from '../../../../../types/trigger';

  // all Masked Carnivale Stages/Acts take place in the same zone
  // 01|2022-11-01T12:26:48.9250000-04:00|31C|All's Well That Starts Well|
  // 0x31C = 796 = ZoneId.AllsWellThatStartsWell
  // default zone is Stage 01 - All's Well That Starts Well
  // actual zone was Stage 03 - Waiting for Golem
  // there are unique Instance Content IDs for each Masked Carnivale Stage
  // first Instance Content ID appearance is an Actor Control (0x21 = 33) line
  // 33|2022-11-01T12:26:52.0770000-04:00|800388BB|40000001|708|00|00|00|
  // 0x40000001 = Initial Commence, 0x708 = 1800s = 30m = instance timer
  // 0x8003 = instance content update, 0x88BB = 35003 = InstanceContentType
  // https://xivapi.com/InstanceContent/35003?pretty=true (Waiting for Golem)
  // Masked Carnivale missing from cactbot/resources/content_list.ts
  // Masked Carnivale info not auto-generated by cactbot/util/gen_zone_id_and_info.py
  // Masked Carnivale missing from cactbot/resources/zone_info.ts (auto-generated)
  // Masked Carnivale missing from cactbot/resources/content_type.ts (auto-generated) (ContentType = 27)

export type Data = RaidbossData;

const triggerSet: TriggerSet<Data> = {
  zoneId: ZoneId.AllsWellThatStartsWell,

  triggers: [
    // ================ Stage 01 Act 1 ================
    // intentionally blank
    // ================ Stage 02 Act 1 ================
    // intentionally blank
    // ---------------- Stage 02 Act 2 ----------------
    // intentionally blank
    // ================ Stage 03 Act 1 ================
    {
      id: 'Carnivale S03 A1 Zipacna Obliterate',
      type: 'StartsUsing',
      netRegex: { id: '381D', source: 'Zipacna' },
      response: Responses.interrupt(),
    },
    // ================ Stage 04 Act 1 ================
    // intentionally blank
    // ---------------- Stage 04 Act 2 ----------------
    {
      id: 'Carnivale S04 A2 Kreios Magitek Field',
      type: 'StartsUsing',
      netRegex: { id: '3821', source: 'Kreios' },
      response: Responses.interrupt(),
    },
    // ================ Stage 05 Act 1 ================
    // intentionally blank
    // ================ Stage 06 Act 1 ================
    // intentionally blank
    // ---------------- Stage 06 Act 2 ----------------
    // intentionally blank
    // ================ Stage 07 Act 1 ================
    // intentionally blank
    // ---------------- Stage 07 Act 2 ----------------
    // intentionally blank
    // ---------------- Stage 07 Act 3 ----------------
    {
      id: 'Carnivale S07 A3 Gladiatorial Node Low Voltage',
      type: 'StartsUsing',
      netRegex: { source: 'Gladiatorial Node', id: '3976' },
      delaySeconds: (_data, matches) => parseFloat(matches.castTime) - 3,
      suppressSeconds: 1,
      alertText: (_data, _matches, output) => output.text!(),
      outputStrings: {
        text: {
          en: 'Hide Behind Barricade',
          de: 'Hinter den Barrikaden verstecken',
          fr: 'Cachez-vous derrière la barricade',
          ja: '柵の後ろに',
          cn: '躲在栅栏后',
          ko: '울타리 뒤에 숨기',
        },
      },
    },
    // ================ Stage 08 Act 1 ================
    // intentionally blank
    // ---------------- Stage 08 Act 2 ----------------
    {
      id: 'Carnivale S08 A2 Arena Progenitrix Burst',
      type: 'StartsUsing',
      netRegex: { id: '3958', source: 'Arena Progenitrix' },
      response: Responses.interrupt(),
    },
    // ================ Stage 09 Act 1 ================
    {
      id: 'Carnivale S09 A1 Guimauve Golden Tongue',
      type: 'StartsUsing',
      netRegex: { id: '37B9', source: 'Guimauve' },
      response: Responses.interrupt(),
    },
    // ================ Stage 10 Act 1 ================
    {
      id: 'Carnivale S10 A1 Crom Dubh King\'s Will',
      type: 'StartsUsing',
      netRegex: { id: '397F', source: 'Crom Dubh' },
      response: Responses.interrupt(),
    },
    {
      id: 'Carnivale S10 A1 Crom Dubh Black Nebula',
      type: 'StartsUsing',
      netRegex: { id: '3984', source: 'Crom Dubh' },
      response: Responses.interrupt(),
    },
    // ================ Stage 11 Act 1 ================
    {
      id: 'Carnivale S11 A1-2 Arena Gas Bomb Fulmination',
      // Arena Gas Bombs (2x Act 1, 4x Act 2) channel a long cast (22.7s) which is lethal if completed
      // this cast can be interrupted (immediate re-cast) by doing any damage to them; warn when this cast is about to finish
      // TODO: this trigger is janky; trigger can overlap from multiple targets in unintended ways,
      //   and trigger still fires if target dies
      type: 'StartsUsing',
      netRegex: { id: '38F7', source: 'Arena Gas Bomb' },
      delaySeconds: (_data, matches) => parseFloat(matches.castTime) - 5,
      suppressSeconds: 5,
      response: Responses.stunOrInterruptIfPossible(),
    },
    // ---------------- Stage 11 Act 2 ----------------
    // intentionally blank
    // ================ Stage 12 Act 1 ================
    // intentionally blank
    // ---------------- Stage 12 Act 2 ----------------
    {
      id: 'Carnivale S12 A2 Hydnora Inflammable Fumes',
      type: 'StartsUsing',
      netRegex: { id: '39A1', source: 'Hydnora' },
      response: Responses.stun(),
    },
    {
      id: 'Carnivale S12 A2 Hydnora Spore Sac',
      type: 'StartsUsing',
      netRegex: { id: '39A0', source: 'Hydnora', capture: false },
      infoText: (_data, _matches, output) => output.text!(),
      outputStrings: {
        text: {
          en: 'Arena Roselets spawning!',
        },
      },
    },
    // ================ Stage 13 Act 1 ================
    // intentionally blank
    // ---------------- Stage 13 Act 2 ----------------
    {
      id: 'Carnivale S13 A2 Carmilla Dark Sabbath',
      type: 'StartsUsing',
      netRegex: { id: '3A67', source: 'Carmilla' },
      response: Responses.lookAway(),
    },
    {
      id: 'Carnivale S13 A2 Carmilla Summon Darkness',
      type: 'AddedCombatant',
      netRegex: { name: 'Arena Succubus' },
      infoText: (_data, matches, output) => output.kill!({ name: matches.name }),
      outputStrings: {
        kill: {
          en: 'Kill ${name}',
          de: 'Besiege ${name}',
          fr: 'Tuez ${name}',
          ja: '${name}を倒す',
          cn: '击杀 ${name}',
          ko: '${name} 처치',
        },
      },
    },
    {
      id: 'Carnivale S13 A2 Arena Succubus Beguiling Mist',
      type: 'StartsUsing',
      netRegex: { id: '3AC5', source: 'Arena Succubus' },
      response: Responses.interrupt(),
    },
    // ================ Stage 14 Act 1 ================
    {
      id: 'Carnivale S14 A1-2 Arena Jam The Last Song',
      type: 'StartsUsing',
      netRegex: { source: 'Arena Jam', id: '39A4' },
      delaySeconds: (_data, matches) => parseFloat(matches.castTime) - 3,
      suppressSeconds: 1,
      alertText: (_data, _matches, output) => output.text!(),
      outputStrings: {
        text: {
          en: 'Hide Behind Barricade',
          de: 'Hinter den Barrikaden verstecken',
          fr: 'Cachez-vous derrière la barricade',
          ja: '柵の後ろに',
          cn: '躲在栅栏后',
          ko: '울타리 뒤에 숨기',
        },
      },
    },
    // ---------------- Stage 14 Act 2 ----------------
    // intentionally blank
    // ================ Stage 15 Act 1 ================
    {
      id: 'Carnivale S15 A1 Bestial Node High Voltage',
      type: 'StartsUsing',
      netRegex: { id: '3A2A', source: 'Bestial Node' },
      response: Responses.interrupt(),
    },
    {
      id: 'Carnivale S15 A1 Arena Shabti Spawn',
      type: 'AddedCombatant',
      netRegex: { name: 'Arena Shabti' },
      alertText: (_data, matches, output) => output.sleep!({ name: matches.name }),
      outputStrings: {
        sleep: Outputs.sleepTarget,
      },
    },
    {
      id: 'Carnivale S15 A1 Bestial Node Superstorm',
      type: 'StartsUsing',
      netRegex: { id: '3A7B', source: 'Bestial Node', capture: false },
      response: Responses.getIn(),
    },
    {
      id: 'Carnivale S15 A1 Bestial Node Repelling Cannons',
      type: 'StartsUsing',
      netRegex: { id: '3A2C', source: 'Bestial Node', capture: false },
      response: Responses.getOut(),
    },
    {
      id: 'Carnivale S15 A1 Bestial Node Ballast',
      type: 'StartsUsing',
      netRegex: { id: '3A2D', source: 'Bestial Node', capture: false },
      response: Responses.getBehind(),
    },
    // ================ Stage 16 Act 1 ================
    // ---------------- Stage 16 Act 2 ----------------
    // ================ Stage 17 Act 1 ================
    // ---------------- Stage 17 Act 2 ----------------
    // ================ Stage 18 Act 1 ================
    // ---------------- Stage 18 Act 2 ----------------
    // ================ Stage 19 Act 1 ================
    // ---------------- Stage 19 Act 2 ----------------
    // ================ Stage 20 Act 1 ================
    // ---------------- Stage 20 Act 2 ----------------
    // ---------------- Stage 20 Act 3 ----------------
    // ================ Stage 21 Act 1 ================
    // ---------------- Stage 21 Act 2 ----------------
    // ================ Stage 22 Act 1 ================
    // ---------------- Stage 22 Act 2 ----------------
    // ================ Stage 23 Act 1 ================
    // ================ Stage 24 Act 1 ================
    // ---------------- Stage 24 Act 2 ----------------
    // ---------------- Stage 24 Act 3 ----------------
    // ================ Stage 25 Act 1 ================
    // ---------------- Stage 25 Act 2 ----------------
    // ---------------- Stage 25 Act 3 ----------------
    // ================ Stage 26 Act 1 ================
    // ---------------- Stage 26 Act 2 ----------------
    // ================ Stage 27 Act 1 ================
    // ================ Stage 28 Act 1 ================
    // ================ Stage 29 Act 1 ================
    {
      id: 'Carnivale S29 A1 Pyre Fluid Swing',
      type: 'StartsUsing',
      netRegex: { id: '4901', source: 'Shikigami of the Pyre' },
      response: Responses.interrupt(),
    },
    // ---------------- Stage 29 Act 2 ----------------
    {
      id: 'Carnivale S29 A2 Undertow Fluid Swing',
      type: 'StartsUsing',
      netRegex: { id: '4A11', source: 'Shikigami of the Undertow' },
      response: Responses.interrupt(),
    },
    // ================ Stage 30 Act 1 ================
    // ---------------- Stage 30 Act 2 ----------------
    // ---------------- Stage 30 Act 3 ----------------
    // ================ Stage 31 Act 1 ================
    // ---------------- Stage 31 Act 2 ----------------
  ],
};

export default triggerSet;
