// This file was autogenerated from running ts-node util/sync_files.ts.
// DO NOT EDIT THIS FILE DIRECTLY.
// Edit the source file below and then run `npm run sync-files`
// Source: ui/oopsyraidsy/data/03-hw/trial/sophia-ex.ts

import NetRegexes from '../../../../../resources/netregexes';
import ZoneId from '../../../../../resources/zone_id';
import { OopsyData } from '../../../../../types/data';
import { OopsyTriggerSet } from '../../../../../types/oopsy';
import { playerDamageFields } from '../../../oopsy_common';

// TODO: failing Discordant Cleansing

const triggerSet: OopsyTriggerSet<OopsyData> = {
  zoneId: ZoneId.ContainmentBayP1T6Unreal,
  damageWarn: {
    'SophiaUn Thunder II': '7DAA', // untelegraphed front cleave
    'SophiaUn Aero III': '7DA8', // "get out"
    'SophiaUn Thunder III': '7DA6', // "get under"
    'SophiaUn Aion Teleos Execute 1': '7DAB', // Thunder II duplication
    'SophiaUn Aion Teleos Execute 2': '7DA9', // Aero III duplication
    'SophiaUn Aion Teleos Execute 3': '7DA7', // Thunder III duplication
    'SophiaUn Gnosis': '7DBC', // knockback
    'SophiaUn The Third Demiurge Ring of Pain': '7DB4', // circle that leaves a frost puddle
    'SophiaUn The Third Demiurge Gnostic Spear': '7DB3', // 270 degree untelegraphed cleave
    'SophiaUn Onrush': '7DBB', // dash
    'SophiaUn Barbelo Light Dew Execute': '7DB9', // line laser from Barbelo head during Execuute
    'SophiaUn Barbelo Light Dew Onrush': '7DBA', // line laser from Barbelo head during Onrush
  },
  damageFail: {
    'SophiaUn The First Demiurge Revengeance': '7DB7', // hitting Vertical/Horizontal Kenoma
  },
  gainsEffectWarn: {
    'SophiaUn Frostbite': '25D', // standing in the frost puddle from the Third Demiurge
  },
  triggers: [
    {
      // Look away; does damage if failed.
      id: 'SophiaUn The Second Demiurge Divine Spark',
      type: 'Ability',
      netRegex: NetRegexes.ability({ id: '7DB0', ...playerDamageFields }),
      condition: (data, matches) => data.DamageFromMatches(matches) > 0,
      mistake: (_data, matches) => {
        return {
          type: 'warn',
          blame: matches.target,
          reportId: matches.targetId,
          text: matches.ability,
        };
      },
    },
    {
      id: 'SophiaUn Knocked Off',
      type: 'Ability',
      // 7D9C = The Scales of Wisdom
      // 7DC6 = The Scales of Wisdom
      // 7DBC = Gnosis (knockback from Barbelo add)
      // Technically, things like Aero III and keroma also knock people off but they also can kill people
      // if we ever get proper "you fell off" log lines, we can fix this up.
      netRegex: NetRegexes.ability({ id: ['7D9C', '7DC6', '7DBC'] }),
      deathReason: (_data, matches) => {
        return {
          id: matches.targetId,
          name: matches.target,
          text: {
            en: 'Knocked off',
            de: 'Runtergefallen',
            fr: 'Renversé(e)',
            ja: 'ノックバック',
            cn: '击退坠落',
            ko: '넉백',
          },
        };
      },
    },
  ],
};

export default triggerSet;
